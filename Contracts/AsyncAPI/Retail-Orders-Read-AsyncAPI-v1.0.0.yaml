asyncapi: 3.0.0
info:
  title: Retail Orders Read Service Messaging API
  version: 1.0.0
  description: Messaging API for the Retail Orders Read service, handling order read model updates and querying
  license:
    name: Proprietary
  contact:
    name: Development Team
servers:
  rabbitmq-dev:
    host: localhost:5672
    protocol: amqp
    description: Development RabbitMQ server
  rabbitmq-prod:
    host: rabbitmq-server:5672
    protocol: amqp
    description: Production RabbitMQ server
defaultContentType: application/json
channels:
  inventoryUpdatedEvent:
    address: inventorydomain.topic.exchange/inventory.updated.event
    description: Channel for receiving inventory update events from the Products service
    messages:
      inventoryUpdated:
        $ref: '#/components/messages/InventoryUpdatedEvent'
    operations:
      receiveInventoryUpdated:
        action: receive
        summary: Receive inventory updated event
        description: Orders.Read service receives inventory update events to update read models
operations:
  receiveInventoryUpdated:
    action: receive
    channel:
      $ref: '#/channels/inventoryUpdatedEvent'
    summary: Receive inventory updated event
    description: Orders.Read service subscribes to inventory update events to maintain read model consistency
components:
  messages:
    InventoryUpdatedEvent:
      name: InventoryUpdatedEvent
      title: Inventory Updated Event
      summary: Event received when inventory is updated after order processing
      contentType: application/json
      payload:
        $ref: '#/components/schemas/InventoryUpdatedEvent'
  schemas:
    InventoryUpdatedEvent:
      type: object
      required:
        - customerId
        - orderId
        - orderDate
        - totalAmount
        - lineItems
      properties:
        customerId:
          type: string
          format: uuid
          description: Unique identifier of the customer who placed the order
        orderId:
          type: string
          format: uuid
          description: Unique identifier of the order
        orderDate:
          type: string
          format: date-time
          description: Date and time when the order was created
        totalAmount:
          type: number
          format: decimal
          description: Total amount of the order
          minimum: 0
        lineItems:
          type: array
          description: List of items in the order
          items:
            $ref: '#/components/schemas/LineItem'
          minItems: 1
    LineItem:
      type: object
      required:
        - skuId
        - qty
        - unitPrice
        - totalPrice
      properties:
        skuId:
          type: string
          format: uuid
          description: Unique identifier of the product SKU
        qty:
          type: integer
          description: Quantity of the product
          minimum: 1
        unitPrice:
          type: number
          format: decimal
          description: Price per unit of the product
          minimum: 0
        totalPrice:
          type: number
          format: decimal
          description: Total price for this line item (qty * unitPrice)
          minimum: 0

  securitySchemes:
    userPassword:
      type: userPassword
      description: RabbitMQ username and password authentication
